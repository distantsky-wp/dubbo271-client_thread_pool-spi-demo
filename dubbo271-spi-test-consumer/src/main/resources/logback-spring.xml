<?xml version="1.0" encoding="UTF-8" ?>
<!--
根节点：configuration
参数：
scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--定义日志文件的存储地址 最好不要使用相对路径-->
    <property name="LOG_HOME" value="${user.home}/Desktop/data/logs"/>
    <shutdownHook class="org.wp.test.main.dubbo.threadpool.LogBackShutdownHook"/>

    <!--控制台输出设置-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度、%logger{36}：显示输出日志的对象、%msg：日志消息，%n是换行符-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%boldCyan([%d{yyyy-MM-dd HH:mm:ss.SSS}])-%magenta([%thread]) %boldBlue(%-5level) %green(%logger{100}) -  %boldMagenta(%msg%n)</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--日志输出到文件的配置、%d{yyyy-MM-dd-HH}表示按小时输出日志-->
    <appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Prudent>true</Prudent>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>
                ${LOG_HOME}/%d{yyyy-MM-dd}/%d{yyyy-MM-dd-HH}.log
            </FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度、%logger{36}：显示输出日志的对象、%msg：日志消息，%n是换行符-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}]-[%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>2MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
    <!--框架相关日志过滤-->
    <logger name="org.springframework" level="ERROR"/>
    <logger name="_org.springframework" level="ERROR"/>
    <logger name="springfox.bean" level="ERROR"/>
    <logger name="Validator" level="ERROR"/>
    <logger name="org.hibernate" level="ERROR"/>
    <logger name="org.mybatis" level="ERROR"/>
    <logger name="com.alibaba" level="ERROR"/>
    <logger name="com.zaxxer" level="ERROR"/>
    <logger name="org.apache.ibatis" level="ERROR"/>
    <logger name="com.github" level="ERROR"/>
    <logger name="com.baomidou" level="ERROR"/>
    <logger name="springfox.documentation" level="ERROR"/>
    <!-- spring security框架默认用户密码输出控制 -->
    <logger name="org.springframework.security.web.DefaultSecurityFilterChain" level="ERROR"/>
    <logger name="org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
            level="ERROR"/>
    <logger name="org.apache" level="ERROR"></logger>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="logFile"/>
    </root>
</configuration>